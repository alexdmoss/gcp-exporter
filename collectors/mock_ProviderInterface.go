// Code generated by mockery v1.0.0

// This comment works around https://github.com/vektra/mockery/issues/155

package collectors

import cli "github.com/urfave/cli"
import context "context"
import mock "github.com/stretchr/testify/mock"
import prometheus "github.com/prometheus/client_golang/prometheus"

// MockProviderInterface is an autogenerated mock type for the ProviderInterface type
type MockProviderInterface struct {
	mock.Mock
}

// Collect provides a mock function with given fields: _a0
func (_m *MockProviderInterface) Collect(_a0 chan<- prometheus.Metric) {
	_m.Called(_a0)
}

// Describe provides a mock function with given fields: _a0
func (_m *MockProviderInterface) Describe(_a0 chan<- *prometheus.Desc) {
	_m.Called(_a0)
}

// GetData provides a mock function with given fields: ctx
func (_m *MockProviderInterface) GetData(ctx context.Context) {
	_m.Called(ctx)
}

// Init provides a mock function with given fields: _a0
func (_m *MockProviderInterface) Init(_a0 *cli.Context) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*cli.Context) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
